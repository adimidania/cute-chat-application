{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AT\\\\Downloads\\\\chat app\\\\chat-app\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\n/**\r\n * “useContext” hook is used to create common data that can be accessed throughout\r\n * the component hierarchy without passing the props down manually to each level. \r\n * Context defined will be available to all the child components without involving “props”.\r\n */\n\nimport { useHistory } from \"react-router-dom\";\n/**\r\n * The useHistory hook helps us to access the history object, \r\n * which is used to navigate programmatically to other routes using push and replace methods.\r\n */\n\nimport { auth } from \"../firebase\";\n/** We are creating a context */\n\nconst AuthContext = React.createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport function AuthProvider({\n  children\n}) {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      setUser(user);\n      setLoading(false);\n      history.push('/chats');\n    });\n  }, [user, history]);\n  const value = {\n    user\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, !loading && children);\n}","map":{"version":3,"sources":["C:/Users/AT/Downloads/chat app/chat-app/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","useHistory","auth","AuthContext","createContext","useAuth","AuthProvider","children","loading","setLoading","user","setUser","history","onAuthStateChanged","push","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA;;AACA,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAE,SAAOP,UAAU,CAACK,WAAD,CAAjB;AAAgC;AAE5D,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,IAAI,CAACW,kBAAL,CAAwBH,IAAI,IAAI;AAC5BC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,OAAO,CAACE,IAAR,CAAa,QAAb;AACH,KAJD;AAKH,GANQ,EAMN,CAACJ,IAAD,EAAOE,OAAP,CANM,CAAT;AAQA,QAAMG,KAAK,GAAG;AAAEL,IAAAA;AAAF,GAAd;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACP,OAAD,IAAYD,QADjB,CADJ;AAKH","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\n/**\r\n * “useContext” hook is used to create common data that can be accessed throughout\r\n * the component hierarchy without passing the props down manually to each level. \r\n * Context defined will be available to all the child components without involving “props”.\r\n */\r\nimport { useHistory } from \"react-router-dom\"\r\n/**\r\n * The useHistory hook helps us to access the history object, \r\n * which is used to navigate programmatically to other routes using push and replace methods.\r\n */\r\nimport { auth } from \"../firebase\"\r\n\r\n/** We are creating a context */\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() { return useContext(AuthContext) }\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [user, setUser] = useState(null)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            setUser(user)\r\n            setLoading(false)\r\n            history.push('/chats')\r\n        })\r\n    }, [user, history])\r\n\r\n    const value = { user }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}