{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\AT\\\\Downloads\\\\chat app\\\\chat-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";/**\r\n * “useContext” hook is used to create common data that can be accessed throughout\r\n * the component hierarchy without passing the props down manually to each level. \r\n * Context defined will be available to all the child components without involving “props”.\r\n */import{useHistory}from\"react-router-dom\";/**\r\n * The useHistory hook helps us to access the history object, \r\n * which is used to navigate programmatically to other routes using push and replace methods.\r\n */import{auth}from\"../firebase\";/** We are creating a context */var AuthContext=React.createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){var children=_ref.children;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var history=useHistory();useEffect(function(){auth.onAuthStateChanged(function(user){setUser(user);setLoading(false);if(user)history.push('/chats');});},[user,history]);var value={user:user};return/*#__PURE__*/React.createElement(AuthContext.Provider,{value:value},!loading&&children);}","map":{"version":3,"sources":["C:/Users/AT/Downloads/chat app/chat-app/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","useHistory","auth","AuthContext","createContext","useAuth","AuthProvider","children","loading","setLoading","user","setUser","history","onAuthStateChanged","push","value"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA;AACA;AACA;AACA;AACA,GACA,OAASC,UAAT,KAA2B,kBAA3B,CACA;AACA;AACA;AACA,GACA,OAASC,IAAT,KAAqB,aAArB,CAEA,gCACA,GAAMC,CAAAA,WAAW,CAAGN,KAAK,CAACO,aAAN,EAApB,CAEA,MAAO,SAASC,CAAAA,OAAT,EAAmB,CAAE,MAAOP,CAAAA,UAAU,CAACK,WAAD,CAAjB,CAAgC,CAE5D,MAAO,SAASG,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACvC,cAA8BR,QAAQ,CAAC,IAAD,CAAtC,wCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAwBV,QAAQ,CAAC,IAAD,CAAhC,yCAAOW,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,OAAO,CAAGX,UAAU,EAA1B,CAEAD,SAAS,CAAC,UAAM,CACZE,IAAI,CAACW,kBAAL,CAAwB,SAAAH,IAAI,CAAI,CAC5BC,OAAO,CAACD,IAAD,CAAP,CACAD,UAAU,CAAC,KAAD,CAAV,CACA,GAAGC,IAAH,CAASE,OAAO,CAACE,IAAR,CAAa,QAAb,EACZ,CAJD,EAKH,CANQ,CAMN,CAACJ,IAAD,CAAOE,OAAP,CANM,CAAT,CAQA,GAAMG,CAAAA,KAAK,CAAG,CAAEL,IAAI,CAAJA,IAAF,CAAd,CAEA,mBACI,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEK,KAA7B,EACK,CAACP,OAAD,EAAYD,QADjB,CADJ,CAKH","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\n/**\r\n * “useContext” hook is used to create common data that can be accessed throughout\r\n * the component hierarchy without passing the props down manually to each level. \r\n * Context defined will be available to all the child components without involving “props”.\r\n */\r\nimport { useHistory } from \"react-router-dom\"\r\n/**\r\n * The useHistory hook helps us to access the history object, \r\n * which is used to navigate programmatically to other routes using push and replace methods.\r\n */\r\nimport { auth } from \"../firebase\"\r\n\r\n/** We are creating a context */\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() { return useContext(AuthContext) }\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [loading, setLoading] = useState(true)\r\n    const [user, setUser] = useState(null)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            setUser(user)\r\n            setLoading(false)\r\n            if(user) history.push('/chats')\r\n        })\r\n    }, [user, history])\r\n\r\n    const value = { user }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}